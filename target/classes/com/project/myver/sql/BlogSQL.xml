<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"HTTP://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blog">

	<!-- 'blog'table ========================================================== -->
	<!-- 21.05.03 블로그 생성 -->
	<insert id="insertBlog" parameterType="blogDTO" useGeneratedKeys="true" keyProperty="blog_no">
		INSERT INTO blog (member_no, blog_title, blog_nick)
		VALUES (#{member_no}, #{blog_title}, #{blog_nick})
	</insert>
	
	<!-- 21.05.19 블로그 홈에서 보일 'member_no'에 해당하는 블로그 정보 -->
	<select id="selectBlogHomeDataFromBlog" parameterType="Integer" resultType="blogDTO">
		SELECT blog_no, blog_nick, blog_img_no
		FROM blog
		WHERE member_no = #{member_no}
	</select>
	
	<!-- 21.05.19 'member_no'로 블로그 정보 가져오기 -->
	<select id="selectAllFromBlog" parameterType="Integer" resultType="blogDTO">
		SELECT * 
		FROM blog 
		WHERE member_no = #{member_no}
	</select>
	
	<!-- 21.05.25 'member_no'로 블로그 이웃 정보 가져오기 (blog_title, blog_nick, blog_img_no) -->
	<select id="selectBlog_titleAndNickAndImg_noFromBlog" parameterType="Integer" resultType="blogDTO">
		SELECT blog_title, blog_nick, blog_img_no 
		FROM blog 
		WHERE member_no = #{member_no}
	</select>
	
	
	<!-- 'blog_visit'table ==================================================================== -->
	<!-- 21.05.19 'blog_no'에 해당하는 블로그 오늘 방문자수 -->
	<select id="todayBlogVisitCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(blog_visit_no)
		FROM blog_visit
		WHERE blog_no = #{blog_no}
			AND DATE_FORMAT(DATE, "%Y-%m-%d") = CURDATE()
	</select>
	
	
	<!-- 'blog_category'table ================================================================ -->
	<!-- 21.05.28 블로그 기본 카테고리('전체보기') 생성 -->
	<insert id="insertDefaultBlogCategory" parameterType="Integer">
		INSERT INTO blog_category (blog_no, category_index, category_name, is_basic, all_category)
		VALUES (#{blog_no}, 0, '전체보기', 1, 1)
	</insert>
	
	<!-- 21.05.23 카테고리 리스트 가져오기 -->
	<select id="selectAllFromBlog_category" parameterType="Integer" resultType="blogDTO">
		SELECT * 
		FROM blog_category 
		WHERE blog_no = #{blog_no} 
		ORDER BY category_index
	</select>
	
	<!-- 21.06.02 공개된 카테고리 리스트 가져오기 -->
	<select id="selectPublicFromBlog_category" parameterType="Integer" resultType="blogDTO">
		SELECT * 
		FROM blog_category 
		WHERE blog_no = #{blog_no} AND is_public = 1
		ORDER BY category_index
	</select>
	
	
	<!-- 'blog_neighbor'table ================================================================== -->
	<!-- 21.05.24 내가 추가한 이웃 리스트 가져오기 -->
	<select id="selectFollowingListFromBlog_neighbor" parameterType="Integer" resultType="blogDTO">
		SELECT neighbor_member_no 
		FROM blog_neighbor 
		WHERE member_no = #{member_no}
	</select>
	
	<!-- 21.05.24 나를 추가한 이웃 리스트 가져오기 -->
	<select id="selectFollowerListFromBlog_neighbor" parameterType="Integer" resultType="blogDTO">
		SELECT member_no 
		FROM blog_neighbor
		WHERE neighbor_member_no = #{member_no}
	</select>
	
	
	<!-- 'blog_object'table =================================================================== -->
	<!-- 21.05.27 'blog_category_no' 혹은 'blog_no'에 해당하는 개수 가져오기 -->
	<select id="selectTotalCountByNoFromBlog_object" parameterType="Map" resultType="Integer">
		SELECT COUNT(blog_object_no) 
		FROM blog_object AS O, blog_category AS C
		WHERE 
		<choose>
			<when test="column_name.equalsIgnoreCase('blog_no')">
				O.blog_no = #{no}
			</when>
			<otherwise>
				O.blog_category_no = #{no}
			</otherwise>
		</choose>
		<if test="only_public">
			AND O.is_public = 1
			AND C.is_public = 1
		</if>
			AND O.blog_category_no = C.blog_category_no
	</select>
	
	<!-- 21.05.27 목록 가져오기 -->
	<select id="selectListDetailByNoFromBlog_object" parameterType="pageUtil" resultType="blogDTO">
		SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, TB.*
  		FROM (SELECT blog_object_no, title, DATE, O.is_public, hits
          	  FROM blog_object AS O, blog_category AS C
          	  WHERE 
          	  <choose>
					<when test="column_name!=null and column_name.equalsIgnoreCase('blog_no')">
						O.blog_no = #{no}
					</when>
					<otherwise>
						O.blog_category_no = #{no}
					</otherwise>
			  </choose>
			  <if test="only_public">
					AND C.is_public = 1
					AND O.is_public = 1
			  </if>
			  		AND O.blog_category_no = C.blog_category_no
              ORDER BY blog_object_no DESC) AS TB
      		, (SELECT @ROWNUM := 0) AS RN
 		LIMIT #{startNo}, #{endNo}
	</select>
	
	<!-- 21.05.27 게시글 내용 가져오기 -->
	<select id="selectObjectDetailByNoFromBlog_object" parameterType="pageUtil" resultType="blogDTO">
		SELECT @ROWNUM := @ROWNUM + 1 AS ROWNUM, TB.*
  		FROM (SELECT blog_object_no, O.blog_category_no, category_name, title, content, DATE, O.is_public, hits, likes
          	  FROM blog_object AS O, blog_category AS C
          	  WHERE
          	  <choose>
					<when test="column_name!=null and column_name.equalsIgnoreCase('blog_no')">
						O.blog_no = #{no}
					</when>
					<otherwise>
						O.blog_category_no = #{no}
					</otherwise>
			  </choose>
			  <if test="only_public">
					AND C.is_public = 1
					AND O.is_public = 1
			  </if>
			  		AND O.blog_category_no = C.blog_category_no
              ORDER BY blog_object_no DESC) AS TB
      		, (SELECT @ROWNUM := 0) AS RN
 		LIMIT #{startNo}, #{endNo}
	</select>
	
	<!-- 21.06.09 게시물 조회수 업데이트(증가) -->
	<update id="updateBlogObjectHits" parameterType="Integer">
		UPDATE blog_object
		SET
		hits = hits+1
		where blog_object_no = #{blog_object_no}
	</update>

	<!-- 21.06.09 블로그 방문자 정보 추가 -->
	<insert id="insertBlog_visit" parameterType="blogDTO">
		INSERT INTO blog_visit (blog_no, blog_object_no, visitor_no, date
		<if test="query != null">
			, query
		</if>
		)
		VALUES (#{blog_no}, #{blog_object_no}, #{visitor_no}, SYSDATE()
		<if test="query != null">
			, #{query}
		</if>
		)
	</insert>
	
	
	
	
	
	
</mapper>
	
